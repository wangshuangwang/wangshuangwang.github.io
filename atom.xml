<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Swans</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangshuangwang.github.io/"/>
  <updated>2019-03-18T11:02:59.213Z</updated>
  <id>https://wangshuangwang.github.io/</id>
  
  <author>
    <name>天纵旺才</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>terminator安装配置</title>
    <link href="https://wangshuangwang.github.io/2019/03/18/terminator%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://wangshuangwang.github.io/2019/03/18/terminator安装配置/</id>
    <published>2019-03-18T10:58:30.000Z</published>
    <updated>2019-03-18T11:02:59.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一、terminator的安装"><a href="#一、terminator的安装" class="headerlink" title="一、terminator的安装"></a>一、terminator的安装</h2><h3 id="1-使用apt包管理工具轻松安装"><a href="#1-使用apt包管理工具轻松安装" class="headerlink" title="1.使用apt包管理工具轻松安装"></a>1.使用apt包管理工具轻松安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install terminator</span><br></pre></td></tr></table></figure><h3 id="2-美化配置"><a href="#2-美化配置" class="headerlink" title="2.美化配置"></a>2.美化配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.config/terminator/config</span><br></pre></td></tr></table></figure><h3 id="3-添加如下代码"><a href="#3-添加如下代码" class="headerlink" title="3.添加如下代码"></a>3.添加如下代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[global_config]</span><br><span class="line">  title_transmit_bg_color = &quot;#d30102&quot;</span><br><span class="line">  focus = system</span><br><span class="line">  suppress_multiple_term_dialog = True</span><br><span class="line">[keybindings]</span><br><span class="line">[profiles]</span><br><span class="line">  [[default]]</span><br><span class="line">    palette = &quot;#2d2d2d:#f2777a:#99cc99:#ffcc66:#6699cc:#cc99cc:#66cccc:#d3d0c8:#747369:#f2777a:#99cc99:#ffcc66:#6699cc:#cc99cc:#66cccc:#f2f0ec&quot;</span><br><span class="line">    background_color = &quot;#2D2D2D&quot; # 背景颜色</span><br><span class="line">    background_image = None   </span><br><span class="line">    background_darkness = 0.85 </span><br><span class="line">    cursor_color = &quot;#2D2D2D&quot; # 光标颜色</span><br><span class="line">    cursor_blink = True # 光标是否闪烁</span><br><span class="line">    foreground_color = &quot;#EEE9E9&quot; # 文字的颜色</span><br><span class="line">    use_system_font = False # 是否启用系统字体</span><br><span class="line">    font = Ubuntu Mono 13  # 字体设置，后面的数字表示字体大小</span><br><span class="line">    copy_on_selection = True # 选择文本时同时将数据拷贝到剪切板中</span><br><span class="line">    show_titlebar = False # 不显示标题栏，也就是 terminator 中那个默认的红色的标题栏</span><br><span class="line">[layouts]</span><br><span class="line">  [[default]]</span><br><span class="line">    [[[child1]]]</span><br><span class="line">      type = Terminal</span><br><span class="line">      parent = window0</span><br><span class="line">      profile = default</span><br><span class="line">    [[[window0]]]</span><br><span class="line">      type = Window</span><br><span class="line">      parent = &quot;&quot;</span><br><span class="line">[plugins]</span><br></pre></td></tr></table></figure><h2 id="二、设置不区分大小写及添加记忆"><a href="#二、设置不区分大小写及添加记忆" class="headerlink" title="二、设置不区分大小写及添加记忆"></a>二、设置不区分大小写及添加记忆</h2><h3 id="1-记录前面输入内容"><a href="#1-记录前面输入内容" class="headerlink" title="1.记录前面输入内容"></a>1.记录前面输入内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">进入该目录：vim ~/.bashrc</span><br><span class="line">末尾新增：</span><br><span class="line">bind &apos;&quot;\e[A&quot;: history-search-backward&apos;</span><br><span class="line">bind &apos;&quot;\e[B&quot;: history-search-forward&apos;</span><br><span class="line">完成之后必须要source刷新</span><br></pre></td></tr></table></figure><h3 id="2-输入时不去分大小写"><a href="#2-输入时不去分大小写" class="headerlink" title="2.输入时不去分大小写"></a>2.输入时不去分大小写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">进入该目录：vim ~/.inputrc</span><br><span class="line">末尾新增：</span><br><span class="line">set completion-ignore-case on</span><br><span class="line">set show-all-if-ambiguous on</span><br><span class="line">完成之后必须要source刷新</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h2 id=&quot;一、terminator的安装&quot;&gt;&lt;a href=&quot;#一、
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>redis相关命令</title>
    <link href="https://wangshuangwang.github.io/2019/03/18/redis%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <id>https://wangshuangwang.github.io/2019/03/18/redis相关命令/</id>
    <published>2019-03-18T08:23:30.000Z</published>
    <updated>2019-03-18T08:37:44.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一、redis安装"><a href="#一、redis安装" class="headerlink" title="一、redis安装"></a>一、redis安装</h2><h3 id="1-更新软件包"><a href="#1-更新软件包" class="headerlink" title="1.更新软件包"></a>1.更新软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  apt-get install redis-server</span><br></pre></td></tr></table></figure><h3 id="2-安装redis-server服务端"><a href="#2-安装redis-server服务端" class="headerlink" title="2.安装redis-server服务端"></a>2.安装redis-server服务端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure><h3 id="3-查看redis系统服务进程"><a href="#3-查看redis系统服务进程" class="headerlink" title="3.查看redis系统服务进程"></a>3.查看redis系统服务进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux|grep redis</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正常出现：</span><br><span class="line">redis     4162  0.1  0.0  10676  1420 ?        Ss   23:24   0:00 /usr/bin/redis-server /etc/redis/redis.conf</span><br><span class="line">conan     4172  0.0  0.0  11064   924 pts/0    S+   23:26   0:00 grep --color=auto redis</span><br></pre></td></tr></table></figure><h3 id="4-检查redis服务状态"><a href="#4-检查redis服务状态" class="headerlink" title="4.检查redis服务状态"></a>4.检查redis服务状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nlt|grep 6379</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正常出现：</span><br><span class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN</span><br></pre></td></tr></table></figure><h3 id="5-通过启动命令检查redis服务状态"><a href="#5-通过启动命令检查redis服务状态" class="headerlink" title="5.通过启动命令检查redis服务状态"></a>5.通过启动命令检查redis服务状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/redis-server status</span><br></pre></td></tr></table></figure><h3 id="6-通过命令行客户端访问redis"><a href="#6-通过命令行客户端访问redis" class="headerlink" title="6.通过命令行客户端访问redis"></a>6.通过命令行客户端访问redis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本机：redis-cli          然后ping出现PONG说明OK</span><br><span class="line">远程其他机器：redis-cli -h 0.0.0.0 -p 6379 -a 123456</span><br></pre></td></tr></table></figure><h3 id="7-redis开启允许远程访问"><a href="#7-redis开启允许远程访问" class="headerlink" title="7.redis开启允许远程访问"></a>7.redis开启允许远程访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/redis/redis.conf     注释掉：#bind 127.0.0.1</span><br></pre></td></tr></table></figure><h3 id="8-redis设置密码"><a href="#8-redis设置密码" class="headerlink" title="8.redis设置密码"></a>8.redis设置密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/redis/redis.conf     设置：requirepass 123456</span><br></pre></td></tr></table></figure><h3 id="9-对于修改后生效"><a href="#9-对于修改后生效" class="headerlink" title="9.对于修改后生效"></a>9.对于修改后生效</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/redis-server restart</span><br><span class="line">Stopping redis-server: redis-server</span><br><span class="line">Starting redis-server: redis-server</span><br></pre></td></tr></table></figure><h2 id="二、redis的使用"><a href="#二、redis的使用" class="headerlink" title="二、redis的使用"></a>二、redis的使用</h2><h3 id="1-增加一条记录并打印该记录"><a href="#1-增加一条记录并打印该记录" class="headerlink" title="1.增加一条记录并打印该记录"></a>1.增加一条记录并打印该记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">增加：set key1 &quot;hello&quot;</span><br><span class="line">打印：get key1</span><br></pre></td></tr></table></figure><h3 id="2-增加数字记录"><a href="#2-增加数字记录" class="headerlink" title="2.增加数字记录"></a>2.增加数字记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">增加：set key2 1</span><br><span class="line">使其自增：INCR key2  INCR key2</span><br><span class="line">打印：get key2 其结果会是：“3”</span><br></pre></td></tr></table></figure><h3 id="3-增加一个列表记录"><a href="#3-增加一个列表记录" class="headerlink" title="3.增加一个列表记录"></a>3.增加一个列表记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">增加：LPUSH key3 a</span><br><span class="line">从左边插入列表：LPUSH key3 b</span><br><span class="line">从右边插入列表：RPUSH key3 c</span><br><span class="line">打印列表按照从左到右顺序：LRANGE key3 0 3</span><br><span class="line">打印：“b”，“a”，“c”</span><br></pre></td></tr></table></figure><h3 id="4-增加一个哈希表"><a href="#4-增加一个哈希表" class="headerlink" title="4.增加一个哈希表"></a>4.增加一个哈希表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">增加：HSET key4 name &quot;wsw&quot;</span><br><span class="line">在哈希表中插入，email的Key和Value的值：HSET key4 email &quot;abc@gmail.com&quot;</span><br><span class="line">打印哈希表中，name为key的值：HGET key4 name     结果：“wsw”</span><br><span class="line">打印整个哈希表：“name”，“wsw”，“email”，“abc@gmail.com”</span><br></pre></td></tr></table></figure><h3 id="5-增加一条哈希表记录"><a href="#5-增加一条哈希表记录" class="headerlink" title="5.增加一条哈希表记录"></a>5.增加一条哈希表记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">增加一条哈希表记录key5，一次插入多个Key和value的值：HMSET key5 username antirez password P1pp0 age 3</span><br><span class="line">打印哈希表中，username和age为key的值：HMGET key5 username age</span><br><span class="line">结果：&quot;antirez&quot;  &quot;3&quot;</span><br><span class="line">打印完整的哈希表记录：HGETALL key5</span><br><span class="line">结果：</span><br><span class="line">1) &quot;username&quot;</span><br><span class="line">2) &quot;antirez&quot;</span><br><span class="line">3) &quot;password&quot;</span><br><span class="line">4) &quot;P1pp0&quot;</span><br><span class="line">5) &quot;age&quot;</span><br><span class="line">6) &quot;3&quot;</span><br></pre></td></tr></table></figure><h3 id="6-删除记录"><a href="#6-删除记录" class="headerlink" title="6.删除记录"></a>6.删除记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查看所有的key列表：keys *</span><br><span class="line">1) &quot;key2&quot;</span><br><span class="line">2) &quot;key3&quot;</span><br><span class="line">3) &quot;key4&quot;</span><br><span class="line">4) &quot;key5&quot;</span><br><span class="line">5) &quot;key1&quot;</span><br><span class="line">删除key1,key5：del key1  del key5</span><br><span class="line">查看所有的key列表：keys *</span><br><span class="line">1) &quot;key2&quot;</span><br><span class="line">2) &quot;key3&quot;</span><br><span class="line">3) &quot;key4&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h2 id=&quot;一、redis安装&quot;&gt;&lt;a href=&quot;#一、redis安
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker下的相关命令</title>
    <link href="https://wangshuangwang.github.io/2019/03/18/docker%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <id>https://wangshuangwang.github.io/2019/03/18/docker相关命令/</id>
    <published>2019-03-18T04:14:30.000Z</published>
    <updated>2019-03-18T08:36:33.074Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一、首先查看ubuntu的内核版本"><a href="#一、首先查看ubuntu的内核版本" class="headerlink" title="一、首先查看ubuntu的内核版本"></a>一、首先查看ubuntu的内核版本</h2><h3 id="1-满足的情况"><a href="#1-满足的情况" class="headerlink" title="1.满足的情况"></a>1.满足的情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入命令：uname -a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">返回：Linux wsw-desktop 4.15.0-46-generic #49~16.04.1-Ubuntu SMP Tue Feb 12 17:45:24 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">结论：可以清楚的看到我们的内盒版本为：4.15.0，本身为X86_64的内核，满足我们安装docker的需求</span><br></pre></td></tr></table></figure><h3 id="2-不满足的情况"><a href="#2-不满足的情况" class="headerlink" title="2.不满足的情况"></a>2.不满足的情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">更新源：sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装高版本内核：sudo apt-get install-headers-4.15.0-46-generic</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">更新grub启动加载器来加载内核：sudo update-grub</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重启机器使用新内核：sudo reboot</span><br></pre></td></tr></table></figure><h2 id="二、安装docker"><a href="#二、安装docker" class="headerlink" title="二、安装docker"></a>二、安装docker</h2><h3 id="1-选择国内的云服务商，这里选择阿里云为例"><a href="#1-选择国内的云服务商，这里选择阿里云为例" class="headerlink" title="1.选择国内的云服务商，这里选择阿里云为例"></a>1.选择国内的云服务商，这里选择阿里云为例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</span><br></pre></td></tr></table></figure><h3 id="2-安装所需要的包"><a href="#2-安装所需要的包" class="headerlink" title="2.安装所需要的包"></a>2.安装所需要的包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual</span><br></pre></td></tr></table></figure><h3 id="3-添加HTTPS传输的软件包及CA证书"><a href="#3-添加HTTPS传输的软件包及CA证书" class="headerlink" title="3.添加HTTPS传输的软件包及CA证书"></a>3.添加HTTPS传输的软件包及CA证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install apt-transport-https ca-certificates</span><br></pre></td></tr></table></figure><h3 id="4-添加GPG秘钥"><a href="#4-添加GPG秘钥" class="headerlink" title="4.添加GPG秘钥"></a>4.添加GPG秘钥</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br></pre></td></tr></table></figure><h3 id="5-添加软件源"><a href="#5-添加软件源" class="headerlink" title="5.添加软件源"></a>5.添加软件源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://apt.dockerproject.org/repo ubuntu-xenial main&quot; | sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><h3 id="6-添加成功后更新软件包缓存"><a href="#6-添加成功后更新软件包缓存" class="headerlink" title="6.添加成功后更新软件包缓存"></a>6.添加成功后更新软件包缓存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="7-安装docker"><a href="#7-安装docker" class="headerlink" title="7.安装docker"></a>7.安装docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-engine</span><br></pre></td></tr></table></figure><h3 id="8-启动docker"><a href="#8-启动docker" class="headerlink" title="8.启动docker"></a>8.启动docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="三、docker-的常用命令"><a href="#三、docker-的常用命令" class="headerlink" title="三、docker 的常用命令"></a>三、docker 的常用命令</h2><h3 id="1-从公网上拉取一个镜像"><a href="#1-从公网上拉取一个镜像" class="headerlink" title="1.从公网上拉取一个镜像"></a>1.从公网上拉取一个镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull images_name</span><br></pre></td></tr></table></figure><h3 id="2-查看现有docker镜像"><a href="#2-查看现有docker镜像" class="headerlink" title="2.查看现有docker镜像"></a>2.查看现有docker镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker container ls</span><br></pre></td></tr></table></figure><h3 id="3-启动一个容器"><a href="#3-启动一个容器" class="headerlink" title="3.启动一个容器"></a>3.启动一个容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run helle-world</span><br></pre></td></tr></table></figure><h3 id="4-导出一个镜像"><a href="#4-导出一个镜像" class="headerlink" title="4.导出一个镜像"></a>4.导出一个镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o image_name.tar image_name</span><br></pre></td></tr></table></figure><h3 id="5-删除一个镜像"><a href="#5-删除一个镜像" class="headerlink" title="5.删除一个镜像"></a>5.删除一个镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm image_name</span><br></pre></td></tr></table></figure><h3 id="6-查看容器端口映射情况"><a href="#6-查看容器端口映射情况" class="headerlink" title="6.查看容器端口映射情况"></a>6.查看容器端口映射情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port air_redis</span><br></pre></td></tr></table></figure><h3 id="7-查看证在运行的容器"><a href="#7-查看证在运行的容器" class="headerlink" title="7.查看证在运行的容器"></a>7.查看证在运行的容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h3 id="8-查看容器pid"><a href="#8-查看容器pid" class="headerlink" title="8.查看容器pid"></a>8.查看容器pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top 容器名（例如：air_test）</span><br></pre></td></tr></table></figure><h3 id="9-docker-容器修改镜像文件名字"><a href="#9-docker-容器修改镜像文件名字" class="headerlink" title="9.docker 容器修改镜像文件名字"></a>9.docker 容器修改镜像文件名字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag imageid name:tag</span><br></pre></td></tr></table></figure><h2 id="四、项目实践中用到的docker"><a href="#四、项目实践中用到的docker" class="headerlink" title="四、项目实践中用到的docker"></a>四、项目实践中用到的docker</h2><h3 id="1-docker官方提供的用于构建私有的镜像仓库和官方registry镜像"><a href="#1-docker官方提供的用于构建私有的镜像仓库和官方registry镜像" class="headerlink" title="1.docker官方提供的用于构建私有的镜像仓库和官方registry镜像"></a>1.docker官方提供的用于构建私有的镜像仓库和官方registry镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 5000:5000 -v /home/ubuntu/docker_repo:/var/lib/registry registry</span><br><span class="line">说明：默认情况下，仓库会被创建在容器的/var/lib/registry,可以通过-v参数来将镜像的文件存放在本地的指定路径</span><br></pre></td></tr></table></figure><h3 id="2-启动镜像容器"><a href="#2-启动镜像容器" class="headerlink" title="2.启动镜像容器"></a>2.启动镜像容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start registry</span><br></pre></td></tr></table></figure><h3 id="3-查看docker网络"><a href="#3-查看docker网络" class="headerlink" title="3.查看docker网络"></a>3.查看docker网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure><h3 id="4-创建docker网络"><a href="#4-创建docker网络" class="headerlink" title="4.创建docker网络"></a>4.创建docker网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create air_test</span><br></pre></td></tr></table></figure><h3 id="5-删docker网络"><a href="#5-删docker网络" class="headerlink" title="5.删docker网络"></a>5.删docker网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker network rm air_rabbit</span><br><span class="line">docker network rm [id] air_test</span><br></pre></td></tr></table></figure><h3 id="5-查看日志"><a href="#5-查看日志" class="headerlink" title="5.查看日志"></a>5.查看日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实时日志：docker logs -f -t --tail=10 &lt;容器名称&gt; </span><br><span class="line">过去某一时间点开始：docker logs --since=2019-01-01-25T11:00:00 &lt;容器名称&gt; | less   </span><br><span class="line">B向上翻页，空格向下翻页</span><br><span class="line">查看某一时间段的日志：docker logs --since 2019-01-01 &lt;容器名称&gt; | grep &apos;2019-01-02&apos;</span><br></pre></td></tr></table></figure><h3 id="6-进入docker容器"><a href="#6-进入docker容器" class="headerlink" title="6.进入docker容器"></a>6.进入docker容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;容器名称&gt; /bin/bash</span><br></pre></td></tr></table></figure><h3 id="7-退出容器"><a href="#7-退出容器" class="headerlink" title="7.退出容器"></a>7.退出容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正常退出：exit</span><br><span class="line">退出后后台仍然运行：ctrl+p &amp;&amp; ctrl+q</span><br></pre></td></tr></table></figure><h3 id="8-docker-容器和主机文件相互拷贝"><a href="#8-docker-容器和主机文件相互拷贝" class="headerlink" title="8.docker 容器和主机文件相互拷贝"></a>8.docker 容器和主机文件相互拷贝</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将主机的目录拷贝到容器里面：docker cp 文件名 &lt;容器名&gt;：/home/tomcat</span><br><span class="line">将容器的目录拷贝到主机上：docker cp &lt;容器名&gt;：/home/tomcat/文件名 /tmp/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h2 id=&quot;一、首先查看ubuntu的内核版本&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>书籍推荐</title>
    <link href="https://wangshuangwang.github.io/2019/03/15/%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90/"/>
    <id>https://wangshuangwang.github.io/2019/03/15/书籍推荐/</id>
    <published>2019-03-15T07:08:38.000Z</published>
    <updated>2019-03-18T04:20:31.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="围城"><a href="#围城" class="headerlink" title="围城"></a>围城</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经典书评：毋庸置疑的经典之作。都说围城写婚姻，其实不然，每个阶段读都会有不同的感受，</span><br><span class="line">          婚姻，人性，人生，真实摊开，刺到骨子里，觉得人人刻薄的要命，机关算尽，可这就是现实啊。</span><br><span class="line">          最喜欢的还是书里的金句，笑点也挺多，真毒舌啊，钱老爷子真是行家啊。</span><br></pre></td></tr></table></figure><h3 id="小王子"><a href="#小王子" class="headerlink" title="小王子"></a>小王子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经典书评：如果有人钟爱着一朵独一无二的、盛开在浩瀚星海里的花。那么，当他抬头仰望繁星时，便会心满意足。</span><br><span class="line">          他会告诉自己：“我心爱的花在那里，在那颗遥远的星星上。”可是，如果羊把花吃掉了。那么，对他来说，</span><br><span class="line">          所有的星光便会在刹那间暗淡无光！而你却认为这并不重要！</span><br></pre></td></tr></table></figure><h3 id="活着"><a href="#活着" class="headerlink" title="活着"></a>活着</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经典书评：生而为人，生老病死、贫穷富贵、心甘情愿、逆来顺受总是要吃苦的。横竖都是吃苦，不如吃的洒脱点儿，</span><br><span class="line">          谁能说阿Q精神全然没有可取的地方。只要活着，就有希望，要做到否极泰来要耗掉多少希望、时间，熬得过来的是英雄，</span><br><span class="line">          熬不过来的是烈士。人生好坏都是受的过程，能偷生地偷生，不能的拍拍身上尘土做点儿样子给外人看总是好的</span><br></pre></td></tr></table></figure><h3 id="追风筝的人"><a href="#追风筝的人" class="headerlink" title="追风筝的人"></a>追风筝的人</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">经典书评：其实每个人的生活很平淡,可能没有那样的事情让你来面对与阿米尔类似的困境.也没有人太多的人回象小说里的阿米尔那样,</span><br><span class="line">          在自己犯了错的多年以后,还能有重新赎罪的机会.现实中并没有太多机会去体会,也不会有太多的人愿意有这种机会来体会.</span><br><span class="line">          人们往往会忽视那个永远躲在角落,但是却是永远对你最亲的人.我们就是这样对待那些对自己全心全意而又别无他求的人的吗</span><br></pre></td></tr></table></figure><h3 id="平凡的世界"><a href="#平凡的世界" class="headerlink" title="平凡的世界"></a>平凡的世界</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">经典书评：生活没有如果，他们的命运告诉了我们。我们每个人的命运都受制于这个时代。我们不能完完全全的决定着自己的命运，</span><br><span class="line">          我们要做的是怎样让我们更幸福。有远大的理想很好，想平凡的生活也好，这只是我们追求幸福的一种途径。</span><br></pre></td></tr></table></figure><h3 id="倾城之恋"><a href="#倾城之恋" class="headerlink" title="倾城之恋"></a>倾城之恋</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">经典书评：《倾城之恋》主要写了白流苏和范柳原之间的爱情故事。女主人公白流苏，是一个离过婚的女人，在家族中的地位低下，</span><br><span class="line">          常遭到家人的唾骂及冷眼歧视。后来在妹妹宝络的相亲宴山遇到并爱上花花公子范柳原。于是她和范柳原展开了一场如“战争”式的恋爱。</span><br><span class="line">          在这场恋爱中他们互相猜疑，互相算计，生怕自已会陷入对方的陷阱中。后来战争爆发了，炮声冲击着整个城市，</span><br><span class="line">          他们这两个无依无靠的灵魂最终紧紧连在一起，成为乱世中的平凡夫妻。</span><br></pre></td></tr></table></figure><h2 id="Slow-End"><a href="#Slow-End" class="headerlink" title="Slow End"></a>Slow End</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;围城&quot;&gt;&lt;a href=&quot;#围城&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>运维相关文档整理</title>
    <link href="https://wangshuangwang.github.io/2019/03/15/%E8%BF%90%E7%BB%B4%E6%96%87%E6%A1%A3%E6%95%B4%E7%90%86/"/>
    <id>https://wangshuangwang.github.io/2019/03/15/运维文档整理/</id>
    <published>2019-03-15T07:08:38.000Z</published>
    <updated>2019-03-15T10:02:39.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="一、redis安装教程："><a href="#一、redis安装教程：" class="headerlink" title="一、redis安装教程："></a>一、redis安装教程：</h2><p>More info: <a href="https://jingyan.baidu.com/article/bad08e1ee14ae409c85121cf.html" target="_blank" rel="noopener">Server</a></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1.下载redis链接地址：</span><br><span class="line">&gt;   wget redis-4.0.1:http://www.redis.cn/download.html</span><br><span class="line">&gt; 2.解压：</span><br><span class="line">&gt;    tar xzvf redis-4.0.1.tar.gz</span><br><span class="line">&gt; 3.开始安装：</span><br><span class="line">&gt;          ①头目录（wsw@ubuntu:~$）cd redis-4.0.1/          </span><br><span class="line">&gt;          ②~/-4.0.1$             ls</span><br><span class="line">&gt;          ③~/redis-4.0.1$  cd src/</span><br><span class="line">&gt;          ④~/redis-4.0.1$  cd src$     ls                出现很多命令行</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="二、前端node和angular安装教程"><a href="#二、前端node和angular安装教程" class="headerlink" title="二、前端node和angular安装教程"></a>二、前端node和angular安装教程</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1.wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz    // 下载</span><br><span class="line">&gt; 2.tar xf  node-v10.9.0-linux-x64.tar.xz       // 解压</span><br><span class="line">&gt; 3.cd node-v10.9.0-linux-x64/                  // 进入解压目录</span><br><span class="line">&gt; 4../bin/node -v                               // 执行node命令 查看版本</span><br><span class="line">&gt; 5.v10.9.0</span><br><span class="line">&gt; 6.此处软连接路径需要根据自己情况添加设置（/home/ubuntu/software/node/bin/npm）</span><br><span class="line">&gt; ln -s /usr/software/nodejs/bin/npm   /usr/local/bin/ </span><br><span class="line">&gt; ln -s /usr/software/nodejs/bin/node   /usr/local/bin/</span><br><span class="line">&gt;</span><br><span class="line">&gt; sudo ln -s /home/ubuntu/software/node/node-v10.9.0-linux-x64/bin/npm   /usr/local/bin/</span><br><span class="line">&gt; sudo ln -s /home/ubuntu/software/node/node-v10.9.0-linux-x64/bin/node   /usr/local/bin/</span><br><span class="line">&gt;</span><br><span class="line">&gt; 7.npm -v   node -v</span><br><span class="line">&gt; 8.node 升级 （sudo npm cache clean -f   sudo npm install -g n  sudo n stable ）</span><br><span class="line">&gt; 9.node 有一个模块叫n,专门用来管理node 版本的，首先安装n模块：①npm install -g n ②n stable 三n v0.10.26</span><br><span class="line">&gt;</span><br><span class="line">&gt; 安装angular</span><br><span class="line">&gt; 1.npm install -g @angular/cli</span><br><span class="line">&gt; 2.sudo ln -s /home/ubuntu/software/node/node-v10.9.0-linux-x64/bin/ng /usr/local/bin/ng</span><br><span class="line">&gt; 3.ng -v</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="三、rabbitmq安装教程"><a href="#三、rabbitmq安装教程" class="headerlink" title="三、rabbitmq安装教程"></a>三、rabbitmq安装教程</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt; 网址：https://blog.csdn.net/rickey17/article/details/72756766</span><br><span class="line">&gt; 安装步骤：</span><br><span class="line">&gt; 添加源 </span><br><span class="line">&gt; 新增公钥（不加会有警告） </span><br><span class="line">&gt; 更新源 </span><br><span class="line">&gt; 安装rabbitmq-server</span><br><span class="line">&gt; 1.</span><br><span class="line">&gt; echo &apos;deb http://www.rabbitmq.com/debian/ testing main&apos; | sudo tee /etc/apt/sources.list.d/rabbitmq.list</span><br><span class="line">&gt; wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -</span><br><span class="line">&gt; sudo apt-get update</span><br><span class="line">&gt; sudo apt-get install rabbitmq-server</span><br><span class="line">&gt; 进入到:cd /etc/apt/sources.list.d$:路径下　执行invoke-rc.d rabbitmq-server status 查看启动状态</span><br><span class="line">&gt; 2.</span><br><span class="line">&gt; 打开管理页面 </span><br><span class="line">&gt; sudo rabbitmq-plugins enable rabbitmq_management</span><br><span class="line">&gt; 查看安装的插件 </span><br><span class="line">&gt; sudo rabbitmqctl list_users</span><br><span class="line">&gt; ar</span><br><span class="line">&gt; 查看用户 </span><br><span class="line">&gt; sudo rabbitmqctl list_users</span><br><span class="line">&gt; 新增管理员用户 </span><br><span class="line">&gt; sudo rabbitmqctl add_user admin admin </span><br><span class="line">&gt; sudo rabbitmqctl set_user_tags admin administrator</span><br><span class="line">&gt; 3、登陆</span><br><span class="line">&gt; 4、离线安装</span><br><span class="line">&gt; 在已安装好的虚拟机上，（/var/cache/apt/archives）</span><br><span class="line">&gt; 执行:dpkg -i avg71flm_r28-1_i386.deb</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="四、docker-相关教程"><a href="#四、docker-相关教程" class="headerlink" title="四、docker 相关教程"></a>四、docker 相关教程</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">&gt; docker网址：https://www.cnblogs.com/shoufengwei/p/7288464.html</span><br><span class="line">&gt; 1.docker run -d -p 5000:5000 -v /home/ubuntu/docker_repo:/var/lib/registry registry</span><br><span class="line">&gt; 2.docker start registry</span><br><span class="line">&gt; 3.docker 查看网络：docker network ls</span><br><span class="line">&gt; 4.docker 创建网路：docker network create air_test</span><br><span class="line">&gt; 5.错误出现：Get https://192.168.1.100:5000/v1/_ping: http: server gave HTTP response to HTTPS client（解决：在/etc/docker/目录下，创建文件daemon.json,在文件中写入：&quot;insecure-registries&quot;:[&quot;192.168.X.X:5000&quot;]）</span><br><span class="line">&gt;</span><br><span class="line">&gt; 设置免秘钥登陆：</span><br><span class="line">&gt; 1.sslocal -c shadowsocks.json</span><br><span class="line">&gt; 2.sslocal -c shadowsocks.json &gt; /dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">&gt;</span><br><span class="line">&gt; docker对后端程序进行打包升级</span><br><span class="line">&gt; 使用tomcat镜像运行容器</span><br><span class="line">&gt; 案列1：docker run --name tomcat -p 8080:8080 -v $PWD/test:/usr/local/tomcat/webapps/test -d tomacat</span><br><span class="line">&gt; 命令说明：-p 8080:8080:将容器的8080端口映射到主机的8080端口中</span><br><span class="line">&gt;          -v $PWD/test:/usr/local/tomcat/webapps/test:将主机中当前目录下的test挂在到容器的/test</span><br><span class="line">&gt;          -d tomcat:后台运行容器返回容器的id为tomcat</span><br><span class="line">&gt; 案列2：docker run -p 6699:6379 --name myredis -v $PWD/redis.conf:/etc/redis/redis.conf -v $PWD/data:/data -d redis: 3.2 redis-server /etc/redis/redis.conf --appendonly yes</span><br><span class="line">&gt; //***********************docker的安装***************************//</span><br><span class="line">&gt; 1.ubuntu 下安装docker，首先docker要求ubuntu的内核版本高于3.10，通过命令uname -r 查看ubuntu版本号</span><br><span class="line">&gt; 2.镜像加速配置：/etc/docker/daemeon.json文件里面增加“registry-mirrors”:[&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class="line">&gt; 3.docker 属于c/s架构模式，通常情况下用到镜像（image）、容器（container）、仓库（repository）</span><br><span class="line">&gt; 4.查找镜像（例如查找mysql，docker search mysql ）、拉取镜像（docker pull mysql）、查看镜像（docker images）、启动镜像（docker run --name mydql1 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7   解释：--name 是自己起的名字 、-p 映射端口、-e 用户名、-d 后台运行、mysql:5.7是依托哪个镜像哪个版本启动）、查询状态（docker ps -a）、停止容器（docker stop）、移除容器（docker rm mysql1）、查看容器完整id(docker inspect -f &apos;&#123;&#123;.Id&#125;&#125;&apos;)mysql1、进入容器内部（docker exec -it mysql1 /bin/bash）</span><br><span class="line">&gt; 5.启动一个tomcat容器，具体如下：①docker run --name tomcat -d -p 8083:8080 tomcat:latest</span><br><span class="line">&gt;   ②将打好的war包上传到tomcat 的容器里面（cp xxx.war  91dadafakfbakfbafkbafbakfba   注释：其中91dadafakfbakfbafkbafbakfba为次容器的全程，如果不知道，通过命令获取：docker inspect -f &apos;&#123;&#123;.Id&#125;&#125;&apos;tomcat）  ③然后进入容器（docker exec -it tomcat /bin/bash）④重启tomcat(docker restart tomcat)</span><br><span class="line">&gt; 6.当容器无法停止、无法删除、无法链接，docker stop,docker kill等命令都无效时①停止所有的容器（docker stop $(docker ps -q)）②强制移除容器（docker rm -f xxx）③清理容器的网络占用（格式：docker network disconnect --force 网络模式，容器名称    例子：docker network disconnect --force bridge）④重新构建容器（docker run --name mysql1 -d -p3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:latest）</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt; 命令说明: --name myredis:指定容器名称</span><br><span class="line">&gt;          --6699:6379:端口映射，redis默认端口是6379，映射成外部端口为6699</span><br><span class="line">&gt;          ---v $PWD/redis.conf:/etc/redis/redis.conf：将主机当前目录下的文件redis.conf配置映射</span><br><span class="line">&gt;          ---v $PWD/data:/data -d redis: 3.2:将主机当前目录下的data挂载到容器的data</span><br><span class="line">&gt;          --redis-server /etc/redis/redis.conf --appendonly yes:在容器执行redis-server启动命令，并打开redis持久化配置</span><br><span class="line">&gt; 需要注意的是：①如果不需要指定配置，-v $PWD/redis.conf:/etc/redis/redis.conf 可以不用</span><br><span class="line">&gt;                              ②redis-server 后面的那段 /etc/redis/redis.conf 也可以不用</span><br><span class="line">&gt;                              ③主要我是用来给redis设置了密码，我怕别人偷偷用我的redis</span><br><span class="line">&gt;                              </span><br><span class="line">&gt; docker下的一些常用软件安装：</span><br><span class="line">&gt; -----------------------------mongo安装教程-------------------------------</span><br><span class="line">&gt; 1. 网址：https://www.mongodb.com/download-center#community</span><br><span class="line">&gt; ①查找Docker Hub上的mongo镜像：docker search mongo</span><br><span class="line">&gt; ②docker pull mongo：3.6</span><br><span class="line">&gt; ③docker images ls</span><br><span class="line">&gt; ④sudo docker run --name air_mongo -p 27018:27017 -v /data/test_volume/mongo_volume:/data/db -d mongo:3.6</span><br><span class="line">&gt; ⑤sudo docker ps</span><br><span class="line">&gt; ⑥sudo docker exec -it air_mongo /bin/bash</span><br><span class="line">&gt; ⑦测试mongo:sudo docker run -it mongo:3.6 mongo --host 172.17.0.1:27018</span><br><span class="line">&gt;</span><br><span class="line">&gt; ---------------------------rabbitmq安装教程------------------------------</span><br><span class="line">&gt; ①查找镜像：sudo docker search rabbitmq</span><br><span class="line">&gt; ②docker pull rabbitmq:management</span><br><span class="line">&gt; ③docker images ls</span><br><span class="line">&gt; ④sudo docker run -d --name air_rabbit --hostname my-rabbit -p 15672:15672 -p 5672:5672 -eRABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=q1w2e3r4 rabbitmq:management</span><br><span class="line">&gt; ⑤查看端口：netstat -nlt|grep 15672</span><br><span class="line">&gt;</span><br><span class="line">&gt; --------------------------redis安装教程---------------------------------</span><br><span class="line">&gt; ①查找镜像：sudo docker search redis</span><br><span class="line">&gt; ②sudo docker pull redis:3.2</span><br><span class="line">&gt; ③docker images ls</span><br><span class="line">&gt; ④sudo docker run --name air_redis -p 6379:6379 -e REDIS_USER=admin -e REDIS_PASSWORD=admin123 -v /data/test_volume/redis_volume:/data -d redis:3.2（需要把路径建好）</span><br><span class="line">&gt; ⑤进入容器：sudo docker exec -it air_redis /bin/bash</span><br><span class="line">&gt; ⑥产看端口：netstat -nlt|grep 6379</span><br><span class="line">&gt; ⑦sudo docker exec -it air_redis redis-cli</span><br><span class="line">&gt; ⑧远程访问redis:redis-cli -h 191.168.1.130 -p 6379(必须找一台装了redis-cli的机器访问)</span><br><span class="line">&gt;</span><br><span class="line">&gt; ------------------------redis连接不上，需要重启-----------------------</span><br><span class="line">&gt; ①重启redis:redis-server redis.conf &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">&gt; ②查看redis端口: ps -ef |grep redis</span><br><span class="line">&gt; ③查看服务器别人历史输入命令:history</span><br><span class="line">&gt;</span><br><span class="line">&gt; -------------------------rocket.chat安装教程---------------------------</span><br><span class="line">&gt; 网址：http://blog.topspeedsnail.com/archives/8626</span><br><span class="line">&gt; sudo apt install docker-compose</span><br><span class="line">&gt; git clone https://github.com/RocketChat/Rocket.Chat</span><br><span class="line">&gt; cd Rocket.Chat</span><br><span class="line">&gt; docker-compose up</span><br><span class="line">&gt; http://yourhost_ip:3000</span><br><span class="line">&gt;</span><br><span class="line">&gt; -------------------------docker compose安装教程------------------------</span><br><span class="line">&gt; 一、安装</span><br><span class="line">&gt; ①运行此命令安装最新版本的Docker Compose:sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose</span><br><span class="line">&gt; ②对二进制文件应用可执行权限：sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line">&gt; ③测试安装：docker-compose --version（输出：docker-compose version 1.22.0, build 1719ceb）说明安装成功</span><br><span class="line">&gt; 二、升级</span><br><span class="line">&gt; ①直接升级：docker-compose migrate-to-labels</span><br><span class="line">&gt; ②不需要保留：docker container rm -f -v myapp_web_1 myapp_db_1 ...</span><br><span class="line">&gt; 三、卸载</span><br><span class="line">&gt; ①如果安装使用，则卸载Docker Compose curl:sudo rm /usr/local/bin/docker-compose</span><br><span class="line">&gt; ②如果安装使用，则卸载Docker Compose pip:pip uninstall docker-compose</span><br><span class="line">&gt;</span><br><span class="line">&gt; ----------------------执行docker-compose up----------------------------</span><br><span class="line">&gt; 出现错误：Couldn&apos;t connect to Docker daemon at http+unix://var/run/docker.sock - is it running?   If it&apos;s at a non-standard location, specify the URL with the DOCKER_HOST environment variable</span><br><span class="line">&gt; 解决方法：</span><br><span class="line">&gt; ①编辑sudo vim /etc/default/docker文件，加入：</span><br><span class="line">&gt; DOCKER_OPTS=&quot;-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock&quot;</span><br><span class="line">&gt; ②重启docker服务：</span><br><span class="line">&gt; sudo service docker restart</span><br><span class="line">&gt; ③检查并确定 Docker 运行在 localhost:4243：</span><br><span class="line">&gt; netstat -ant  |grep 4243</span><br><span class="line">&gt; tcp        0      0 127.0.0.1:4243          0.0.0.0:*               LISTEN</span><br><span class="line">&gt; ④设置 DOCKER_HOST 环境变量，可以添加到 ~/.bashrc 文件中</span><br><span class="line">&gt; export DOCKER_HOST=tcp://localhost:4243</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt; -----------------新环境下直接利用docker　pull文件------------------------------</span><br><span class="line">&gt; sudo docker network ls</span><br><span class="line">&gt; docker run -d --name air_rabbit --network air_test --hostname my-rabbit --volume rabbit_volume:/var/lib/rabbitmq -p 15672:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=q1w2e3r4 rabbitmq:management</span><br><span class="line">&gt; sudo docker run -d --name air_rabbit --network air_test --hostname my-rabbit --volume rabbit_volume:/var/lib/rabbitmq -p 15672:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=q1w2e3r4 rabbitmq:management</span><br><span class="line">&gt; docker network create --driver=bridge  --subnet=172.18.0.0/16 --gateway=172.18.0.1  air_test</span><br><span class="line">&gt; sudo docker network create --driver=bridge  --subnet=172.18.0.0/16 --gateway=172.18.0.1  air_test</span><br><span class="line">&gt; sudo docker run -d --name air_rabbit --network air_test --hostname my-rabbit --volume rabbit_volume:/var/lib/rabbitmq -p 15672:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=q1w2e3r4 rabbitmq:management</span><br><span class="line">&gt; docker run --name air_redis --network air_test -p 6379:6379 -v /data/test_volume/redis_volume:/data -d redis:4.0 --requirepass &quot;123456&quot;</span><br><span class="line">&gt; sudo docker run --name air_redis --network air_test -p 6379:6379 -v /data/test_volume/redis_volume:/data -d redis:4.0 --requirepass &quot;123456&quot;</span><br><span class="line">&gt; sudo docker run --name air_mongo -p 27017:27017 --network air_test  -v /etc/localtime:/etc/localtime -v /data/test_volume/mongo_volume:/data/db -d swifthealth/mongo_3.6</span><br><span class="line">&gt;</span><br><span class="line">&gt; -----------docker实时查看日志或者查看某一天的日志-----------</span><br><span class="line">&gt; 1.查看实时日志：</span><br><span class="line">&gt;</span><br><span class="line">&gt; docker logs -f -t --tail=10 &lt;容器名称&gt;</span><br><span class="line">&gt; e.g:$ docker logs -f -t --tail=10 sync_api</span><br><span class="line">&gt; 2.查看从过去某一时间点开始的日志</span><br><span class="line">&gt; B:向上翻页  空格：向下翻页</span><br><span class="line">&gt; $ docker logs  --since=2019-01-25T11:00:00   &lt;容器名称&gt;   | less</span><br><span class="line">&gt; 3.查看最近30分钟的日志</span><br><span class="line">&gt; $ docker logs --since 30m &lt;容器名称&gt;  | less</span><br><span class="line">&gt; 4.查看过去某一时间点到另一时间点的日志</span><br><span class="line">&gt; e.g:查看sync_api 2019-1-26 12 点到14点的日志</span><br><span class="line">&gt; $ docker logs --since 2019-01-25 sync_api | grep &apos;2019-01-26 1[2-4]&apos;</span><br><span class="line">&gt;</span><br><span class="line">&gt; 一、修改免密码登陆文件（cd ~/.ssh/   vim authorized_keys）</span><br><span class="line">&gt; 二、修改可访问的路径和文件权限 （cd 目标目录  sudo chmod -R o+rx 目录）</span><br><span class="line">&gt; 三、添加jdyyy用户（sudo useradd -m -s /bin/bash jdyyy   sudo passwd jdyyy）</span><br><span class="line">&gt; 四、修改ubuntu用户密码 （sudo passwd ubuntu）</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="五、ubuntu下关闭终端使程序后台运行命令"><a href="#五、ubuntu下关闭终端使程序后台运行命令" class="headerlink" title="五、ubuntu下关闭终端使程序后台运行命令"></a>五、ubuntu下关闭终端使程序后台运行命令</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1.nohup 和 &amp;命令一起使用：nohup command &amp;</span><br><span class="line">&gt; 例子：nohup /usr/local/node/bin/node /www/im/chat.js &gt;&gt; /usr/loacal/node/output.log 2&gt;&amp;1 &amp;</span><br><span class="line">&gt; ①查看运行的后台进程：jobs -l（注：jobs命令只看当前终端生效的，关闭终端后，在另一个终端jobs已经无法看到后台跑的程序了，此时利用ps查看进程命令）</span><br><span class="line">&gt; ps -ef</span><br><span class="line">&gt; ps -aux|grep shadowsocks.json (a:显示所有程序,u:以用户为主的格式来显示,x:显示所有程序，不以终端机来区分)</span><br><span class="line">&gt; ps -aux|grep shadowsocks.json| grep -v grep | awk &apos;&#123;print $2&#125;&apos;(解释：grep -v参数可以将grep命令排除掉，awk提取一下进程ID)</span><br><span class="line">&gt; ②查看使用某端口的进程：lsof -i:8080   netstat -ap|grep 8080  </span><br><span class="line">&gt; ③查看到进程id之后，使用netstat命令查看其占用的端口 ：netstat -nap|grep 7799</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="六、tomcat相关配置说明"><a href="#六、tomcat相关配置说明" class="headerlink" title="六、tomcat相关配置说明"></a>六、tomcat相关配置说明</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&gt; -------------解决tomcat中文乱码现象---------</span><br><span class="line">&gt; tomcat7之前使用的格式是：iso8895-1 ,自身不能显示中文，</span><br><span class="line">&gt; tomcat8以后默认编码格式是utf-8</span><br><span class="line">&gt; 对于get请求处理方式是在connector末尾处加上：URIEncoding=&quot;UTF-8&quot;</span><br><span class="line">&gt; 对于post请求方式则通过设置编码：request.setCharacterEncoding(&quot;UTF-8&quot;)</span><br><span class="line">&gt;</span><br><span class="line">&gt; --------------修改tomcat时区问题------------</span><br><span class="line">&gt; 比我们的系统时区慢8小时，应该如何处理</span><br><span class="line">&gt; 解决办法：产生原因是因为tomcat中的时区设置与操作系统的时区设置不一致，通过修改tomcat根目录下的bin文件夹中的catalina.bat文件，增加以下配置解决问题</span><br><span class="line">&gt; set JAVA_OPTS=%JAVA_OPTS%   -Duser.timezone=GMT+08(将时区设置为北京时区)</span><br><span class="line">&gt; 补充说明（date 查看日期；date +&quot;%Z %z&quot;）大Z表示的是按字母表排序的时间缩写（如，EDT）,z数字时区（例如，-0400）</span><br><span class="line">&gt; -------------apache+tomcat负载均衡分布式集群配置-------------------</span><br><span class="line">&gt; ①实现应用服务器之间的session共享：（保证一台服务器挂掉，另一台服务器可以继续支持工作）</span><br><span class="line">&gt; ②负载均衡</span><br><span class="line">&gt; apache 进行分流，把请求的权重以及当时负荷分tomcat1 和 tomcat2...去处理</span><br><span class="line">&gt; ③水平集群，指的是在不同电脑上安装tomcat，且tomcat的数量为一个，可以不必修改tomcat配置文件</span><br><span class="line">&gt;   垂直集群，指的是同一个电脑上安装两个tomcat，必须修改其中一个设置，避免端口冲突</span><br><span class="line">&gt;   </span><br><span class="line">&gt; ④代理：正向代理（客户端比较清楚自己要访问的服务器地址，服务器只清楚来自哪个代理服务器，不清楚具体是哪个客户端，正向代理屏蔽或者隐藏了真实的客户端信息）</span><br><span class="line">&gt;         反向代理（主要用于服务器分布集群式部署，反向代理隐藏了服务器的信息）</span><br><span class="line">&gt; ⑤nginx支持的负载均衡调度算法如下（1.weight轮询，接收到的顺序逐一分配到不同的后端服务器，即使在使用过程中某一台服务器宕机，nginx会自动将该服务器踢出队列，请求受理情况下不回收到任何影像，可以通过设置权重值来分配受理</span><br><span class="line">&gt;                                  2.in_pash:每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下的session共享问题</span><br><span class="line">&gt;                                  3.fair:智能调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配的请求少。nginx默认不支持这种算 法，安装好upsteam_fair就可以，4.url_hash:按照访问的url的hash结果分配请求，每个请求的url会指向后端的固定的某个服务器，可以在nginx作为静态服务器的情况下提高缓存效率）</span><br><span class="line">&gt;</span><br><span class="line">&gt; --------------------ubuntu16.04系统连接数超限解决方法----------------------------</span><br><span class="line">&gt; 修改ubuntu16.04文件数、进程数限制，近日进行HBase全分布部署，要修改ubuntu16.04默认资源限制</span><br><span class="line">&gt; 终端修改：sudo vim /etc/security/limits.conf文件，</span><br><span class="line">&gt; 增加：root   soft   nofile   10240</span><br><span class="line">&gt;       root   hard   nofile   10240</span><br><span class="line">&gt;       root   soft   noproc   10240</span><br><span class="line">&gt;       root   hard   noproc   10240</span><br><span class="line">&gt; 保存后，在输入ulimit -n 10240 即可生效   ，最后用ulimie a 查看</span><br><span class="line">&gt; 查看服务器连接数：netstat -n|wc -l</span><br><span class="line">&gt; 有效的连接数：netstat -nat|grep ESTABLISHED|wc -l</span><br><span class="line">&gt; ------------------git 拉代码报错，只需执行-----------</span><br><span class="line">&gt; eval &quot;$(ssh-agent -s)&quot;</span><br><span class="line">&gt; ssh-add</span><br><span class="line">&gt; --------------修改完hosts和hostname文件，立即生效命令-------------</span><br><span class="line">&gt; sudo /etc/init.d/hostname.sh start</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="七、git上代码的合并等内容"><a href="#七、git上代码的合并等内容" class="headerlink" title="七、git上代码的合并等内容"></a>七、git上代码的合并等内容</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; -------------合并代码到master分支上----------</span><br><span class="line">&gt; 1.加入我们现在在刚刚开发完的dev分之上</span><br><span class="line">&gt; git add .</span><br><span class="line">&gt; git commit -m &apos;dev&apos;</span><br><span class="line">&gt; git push -u origin dev</span><br><span class="line">&gt; 2.我们要把dev分支的代码合并到master分之上，该如何？首先切换到master分支上</span><br><span class="line">&gt; git checkout master</span><br><span class="line">&gt; 3.如果多人开发，需要把远程master上的代码pull下来</span><br><span class="line">&gt; git pull origin master</span><br><span class="line">&gt; 4.如果自己一个开发就没必要，为了保险期间还是pull,然后我们把dev分支的代码合并到master上</span><br><span class="line">&gt; git merge dev</span><br><span class="line">&gt; 5.然后查看状态</span><br><span class="line">&gt; git status</span><br><span class="line">&gt; (On branch master</span><br><span class="line">&gt;  Your branch is ahead of &apos;origin/master&apos;by 12 commits.</span><br><span class="line">&gt;  (use &quot;git push&quot; to publish your local commits)</span><br><span class="line">&gt;  nothing to commit,working tree clean</span><br><span class="line">&gt; 上面的意思就是你有12个commit,需要push到远程master上，执行下面命令即可</span><br><span class="line">&gt; )</span><br><span class="line">&gt; git push origin master</span><br><span class="line">&gt; tar xf 解压（遇错：error is not recoverable:exiting now）</span><br><span class="line">&gt; 远程连接：sudo apt-get install openssh-server</span><br><span class="line">&gt;</span><br><span class="line">&gt; ------------idea中git用户名的修改---------------</span><br><span class="line">&gt; 查看当前用户：git config user.name</span><br><span class="line">&gt; 修改用户名输入：git config --global user.name &quot;用户名&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="八、oracle数据库相关"><a href="#八、oracle数据库相关" class="headerlink" title="八、oracle数据库相关"></a>八、oracle数据库相关</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt; ------------oracle数据库死锁查看并解锁--------------</span><br><span class="line">&gt; 查看死锁：</span><br><span class="line">&gt; select object_name,machine,s.sid,s.serial#</span><br><span class="line">&gt; from v$locked_object l,dba_objects o ,v$session s</span><br><span class="line">&gt; where l.object_id　=　o.object_id and l.session_id=s.sid;</span><br><span class="line">&gt; 解锁：</span><br><span class="line">&gt; alter system kill session &apos;48,2030&apos;;</span><br><span class="line">&gt;</span><br><span class="line">&gt; ------------数据库查询结果拼接-------------------</span><br><span class="line">&gt; SELECT to_char(operatetime,&apos;yyyy&apos;) || TRIM(LEADING &apos;0&apos; FROM TO_CHAR(OPERATETIME,&apos;MM&apos;)) || &apos;/&apos; || checkserialnum ||&apos;/&apos; || pacspath FROM pda.pda_pacsimage WHERE CHECKSERIALNUM=&apos;20180818000914&apos;;</span><br><span class="line">&gt;</span><br><span class="line">&gt; ------------ORACLE查询session连接数和inactive--------------</span><br><span class="line">&gt; 1.查看当前总会话数和进程数</span><br><span class="line">&gt; 当前session的连接数：select count(*) from v$session</span><br><span class="line">&gt; 当前的数据库连接数：select count(*) from v$process</span><br><span class="line">&gt; 查询数据允许的最大连接数：select value from v$parameter where name = &apos;process&apos;</span><br><span class="line">&gt; 修改数据库的最大连接数：alter system set processes = 3-- scope = spfile</span><br><span class="line">&gt; 当前并发的连接数：select count(*) from v$session where status = &apos;ACTIVE&apos;</span><br><span class="line">&gt;</span><br><span class="line">&gt; 2.查询哪些用户的连接数是多少</span><br><span class="line">&gt; select b.MACHINE,b.PROGRAM,count(*) FROM V$PROCESS a,V$SESSION b WHERE a.PADDR = b.USERNAME IS NOT NULL GROUP BY B.MACHINE,B.PROGRAM ODESR BY COUNT(*) DESC</span><br><span class="line">&gt;</span><br><span class="line">&gt; 3.查询是否死锁</span><br><span class="line">&gt; select * from v$locked_object</span><br><span class="line">&gt;</span><br><span class="line">&gt; 4.重启和关闭数据库</span><br><span class="line">&gt; 关闭数据库：shutdown immediate</span><br><span class="line">&gt; 重启数据库：startup</span><br><span class="line">&gt;</span><br><span class="line">&gt; -----------oracle数据库学习-------------</span><br><span class="line">&gt; 1.什么是存储过程，存储过程的作用（存储过程是一种为了完成特定功能的SQL语句集，编译后存储在数据库中，用户通过指定存储过程的名字并给参数来执行它）</span><br><span class="line">&gt; 2.存储过程的特点：①只在创造时进行编译，以后每次执行都不需要编译，而一般的SQL语句执行一次就得编译一次，因此使用存储过程可以提高数据库执行速度，②当数据库进行复杂操作时，如多个表进行UPDATE INSERT QUERY DELETE,便可以用存储过程封装，③与数据库提供的事务处理结合在一起，④安全性高，可以设定只有某个用户才具有对指定存储过程的使用权限</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="九、pg数据库"><a href="#九、pg数据库" class="headerlink" title="九、pg数据库"></a>九、pg数据库</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&gt; ----------postgresql中将查询出来的字段转换成数组，带&#123;&#125;的方法------------</span><br><span class="line">&gt; SELECT (string_to_array((select special from sys_doctor where doctor_code =&apos;006641&apos;),&apos;&apos;))  FROM sys_doctor t where t.doctor_code=&apos;006641&apos;;</span><br><span class="line">&gt;</span><br><span class="line">&gt; ----------对pg数据库表进行清空操作-----------</span><br><span class="line">&gt; TRUNCATE TABLE SYS_DICTIONARY_MAPPING</span><br><span class="line">&gt;</span><br><span class="line">&gt; ----------pg杀死进程sql-----------</span><br><span class="line">&gt; 查询表中存在的锁</span><br><span class="line">&gt; select a.locktype,a.database,a.pid,a.mode,a.relation,b.relname</span><br><span class="line">&gt; from pg_locks a</span><br><span class="line">&gt; join pg_class b on a.relation = b.oid</span><br><span class="line">&gt; where b.relname = &apos;&apos;;</span><br><span class="line">&gt;</span><br><span class="line">&gt; 以上为查询某表上是否存在锁的SQL语句。</span><br><span class="line">&gt; 查到后发现确实存在锁，如下：</span><br><span class="line">&gt;</span><br><span class="line">&gt;  locktype | database |  pid  |      mode      | relation | relname</span><br><span class="line">&gt;</span><br><span class="line">&gt; ----------+----------+-------+-----------------+----------+---------</span><br><span class="line">&gt;</span><br><span class="line">&gt;  relation |  439791 | 26752 | AccessShareLock |  2851428 |table_name</span><br><span class="line">&gt;</span><br><span class="line">&gt;  relation |  439791 | 26752 | ExclusiveLock  |  2851428 |table_name</span><br><span class="line">&gt;</span><br><span class="line">&gt; 再根据上面查出来的pid去表pg_stat_activity查询一下该锁对应的SQL语句：</span><br><span class="line">&gt; select usename,current_query ,query_start,procpid,client_addr from pg_stat_activity where procpid=17509;</span><br><span class="line">&gt;</span><br><span class="line">&gt; 如下：</span><br><span class="line">&gt;</span><br><span class="line">&gt;   usename  |  current_query                      |          query_start          | procpid |  client_addr</span><br><span class="line">&gt;</span><br><span class="line">&gt; -----------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+----------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;  gpcluster | DELETE FROM TABLE_NAME WHERE A = 1  | 2011-05-14 09:35:47.721173+08 |  17509 | 192.168.165.18</span><br><span class="line">&gt; (1 row)</span><br><span class="line">&gt; kill有两种方式，第一种是：</span><br><span class="line">&gt; SELECT pg_cancel_backend(PID);</span><br><span class="line">&gt; 这种方式只能kill select查询，对update、delete 及DML不生效)</span><br><span class="line">&gt; 第二种是：</span><br><span class="line">&gt; SELECT pg_terminate_backend(PID);</span><br><span class="line">&gt; 这种可以kill掉各种操作(select、update、delete、drop等)操作</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h2 id=&quot;一、redis安装教程：&quot;&gt;&lt;a href=&quot;#一、red
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装hexo</title>
    <link href="https://wangshuangwang.github.io/2019/03/14/%E5%AE%89%E8%A3%85hexo/"/>
    <id>https://wangshuangwang.github.io/2019/03/14/安装hexo/</id>
    <published>2019-03-14T07:15:30.000Z</published>
    <updated>2019-03-18T06:16:26.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   建立与你用户名相对应仓库，仓库名必须是 yourusername.github.io，固定写</span><br><span class="line">``` </span><br><span class="line">### 安装Hexo</span><br></pre></td></tr></table></figure><p>   Node和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo<br>   sudo npm install-g hexo<br>   <strong> 执行init命令初始化hexo,命令：</strong><br>   hexo init<br>   <strong> 生成静态页面</strong><br>   hexo generate<br>   <strong> 启动本地服务，进行文章预览调试，命令：</strong><br>   hexo server<br>   <strong> 浏览器输入 <a href="http://0.0.0.0:4000/" target="_blank" rel="noopener">http://0.0.0.0:4000/</a> 就可以看到很丑的默认初始页了 </strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### hexo与github关联</span><br></pre></td></tr></table></figure></p><p>  <strong> 在本地找到 _config.yml 文件 </strong><br>  文件底部有这样的属性：<br>  deploy:</p><p>  type:               修改为：<br>  deploy:</p><p>  type: git</p><p>  repo: <a href="https://github.com/你在github的根路径/你建立的仓库名.git" target="_blank" rel="noopener">https://github.com/你在github的根路径/你建立的仓库名.git</a></p><p>  branch: master<br>  <strong> 本地文件推送到github </strong><br>  hexo generate (生成静态页面)</p><p>  hexo deploy (远程推送)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### 美化博客</span><br></pre></td></tr></table></figure></p><p>   <strong> hexo有很多配套主题，可自行百度并都有配置文档 </strong><br>   头像图片、作者名字、网站描述等网站基本属性都在根目录的_config.yml文件里配置<br>   评论、搜索、统计、等功能配置都在主题文件的_config.yml文件里配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### 发表文章</span><br></pre></td></tr></table></figure></p><p>   <strong> 新建文章命令后: </strong><br>   hexo new “文章名”<br>   在source/_posts会生成后缀名为.md的文件，支持markdown语法，里面可以设置标签名、分类名、是否开启评论功能等（markdown语法冒号后加空格）<br><code>`</code><br>More info: <a href="https://www.jianshu.com/p/6bb5e2983016" target="_blank" rel="noopener">Writing</a></p><h2 id="Slow-End"><a href="#Slow-End" class="headerlink" title="Slow End"></a>Slow End</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;配置Github&quot;&gt;&lt;a href=&quot;#配置Github&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wangshuangwang.github.io/2019/03/14/hello-world/"/>
    <id>https://wangshuangwang.github.io/2019/03/14/hello-world/</id>
    <published>2019-03-14T04:26:17.819Z</published>
    <updated>2019-03-14T04:26:17.819Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
